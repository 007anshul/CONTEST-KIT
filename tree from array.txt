#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
vector<int> memo(10000,0);

struct Node 
{ 
    int data; 
    Node* left, * right; 
}; 

Node* newNode(int data) 
{ 
    Node* node = (Node*)malloc(sizeof(Node)); 
    node->data = data; 
    node->left = node->right = NULL; 
    return (node); 
} 

Node* insertLevelOrder(vector<int> arr, Node* root, 
                       int i, int n) 
{ 
     
    if (i < n) 
    { 
        Node* temp = newNode(arr[i]); 
        root = temp; 
  
        
        root->left = insertLevelOrder(arr, 
                   root->left, 2 * i + 1, n); 
  
         
        root->right = insertLevelOrder(arr, 
                  root->right, 2 * i + 2, n); 
    } 
    return root; 
} 

void order(Node *root)
{
    if(root)
    {
        order(root->right);
       
    order(root->left);
 if(root->data!=-1)
        cout<<root->data;


    }
}

 void solve()
{ 
    int n;
    cin>>n;

    vector<int> v(n);
    for(auto &x:v)
        cin>>x;

Node* root = insertLevelOrder(v, root, 0, n); 

order(root);


    

 


}

int main() 
{ 
ios_base::sync_with_stdio(false);
    cin.tie(NULL);
int t;
t=1;

while(t--)
    solve();
      
  return 0;

}